<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>rosemanblog</title><link href="http://blog.roseman.org.uk" rel="alternate"></link><link href="http://blog.roseman.org.uk/feeds/tags/haystack.xml" rel="self"></link><id>http://blog.roseman.org.uk</id><updated>2009-12-26T10:20:33+00:00</updated><entry><title>Showing queries in Haystack</title><link href="http://blog.roseman.org.uk/2009/12/26/showing-queries-haystack/" rel="alternate"></link><updated>2009-12-26T10:20:33+00:00</updated><author><name>Daniel Roseman</name></author><id>http://blog.roseman.org.uk/2009/12/26/showing-queries-haystack/</id><summary type="html">&lt;p&gt;At work we've been using &lt;a href="http://haystacksearch.org/"&gt;Haystack&lt;/a&gt; to manage our site search, with a Solr backend.&lt;/p&gt;
&lt;p&gt;As usual, we're customising things quite a lot - using faceted queries and weighted indexes, and bypassing the built-in search forms - so I wanted to be sure, in line with my general obsession with query efficiency, that we weren't generating multiple Solr queries for every search.&lt;/p&gt;
&lt;p&gt;Haystack does log queries for every request internally, but as far as I can tell there's no way of getting to that information without writing some custom code to import and expose the relevant variable. So I've written a (very basic) panel for the &lt;a href="http://github.com/robhudson/django-debug-toolbar"&gt;Django debug toolbar&lt;/a&gt; which does just that.&lt;/p&gt;
&lt;p&gt;Just put this somewhere on your pythonpath or in your project, and add it to the &lt;code&gt;DEBUG_TOOLBAR_PANELS&lt;/code&gt; list in settings.py. &lt;/p&gt;
&lt;script src="http://gist.github.com/263113.js?file=haystack_panel.py"&gt;&lt;/script&gt;</summary><category term="django"></category><category term="debug toolbar"></category><category term="haystack"></category></entry></feed>