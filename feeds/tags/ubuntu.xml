<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>rosemanblog</title><link href="http://blog.roseman.org.uk" rel="alternate"></link><link href="http://blog.roseman.org.uk/feeds/tags/ubuntu.xml" rel="self"></link><id>http://blog.roseman.org.uk</id><updated>2010-12-15T06:18:09+00:00</updated><entry><title>From MacVim to terminal vim</title><link href="http://blog.roseman.org.uk/2010/12/15/macvim-terminal-vim/" rel="alternate"></link><updated>2010-12-15T06:18:09+00:00</updated><author><name>Daniel Roseman</name></author><id>http://blog.roseman.org.uk/2010/12/15/macvim-terminal-vim/</id><summary type="html">&lt;p&gt;I'm a very happy user of MacVim, which very nicely integrates vim into a native Mac app. But occasionally I need to edit code via a terminal, which means dropping back to plain old vim. Recently I found myself working on a project that was distributed on a self-contained virtual machine, and after several days of mucking around with mounting the VM's filesystem via &lt;code&gt;sshfs&lt;/code&gt; and suffering continued networking drop-outs, I decided to bite the bullet and move to working entirely within the terminal.&lt;/p&gt;
&lt;p&gt;Mostly, the transition was fairly simple. I was able to copy over my &lt;code&gt;.vimrc&lt;/code&gt; and the contents of the &lt;code&gt;.vim&lt;/code&gt; directory to my home directory on the VM, and almost everything 'just worked'. There were a few exceptions.&lt;/p&gt;
&lt;p&gt;The first thing that I missed was the mouse. Although like any good vim user I do stay mainly on the keyboard, it's nice to have the mouse available occasionally as an alternative for things like rapid scrolling with the wheel, tab/window switching, and text selection. I initially thought I would just have to do without, but it turns out that it is quite possible to have the mouse working within the terminal. &lt;/p&gt;
&lt;p&gt;The main issue is that although there is a well-defined way for an xterm terminal to send mouse events, the OSX Terminal app doesn't support it. However, there is a nice easy hack that does work: &lt;a href="http://bitheap.org/mouseterm/"&gt;MouseTerm&lt;/a&gt;. This is a SIMBL plugin which patches the terminal so it sends mouse events. I already had SIMBL installed, as I use Ciar√°n Walsh's indispensible &lt;a href="http://ciaranwal.sh/2007/11/01/customising-colours-in-leopard-terminal"&gt;TerminalColors&lt;/a&gt; to make the terminal colours sensible, so it was just a matter of clicking the MouseTerm .dmg to get it working. Then I just added &lt;code&gt;set mouse=a&lt;/code&gt; to my .vimrc, and hey presto: mouse in terminal vim.&lt;/p&gt;
&lt;p&gt;Secondly, tabs. I use tabs all the time in vim. MacVim overrides vim's built-in tabs with proper native ones, so that you can open them in the standard way - eg opening documents in new tabs via &lt;code&gt;:tabe&lt;/code&gt; - but then switch between them with the standard OSX shortcut keys, &lt;code&gt;cmd-[&lt;/code&gt; and &lt;code&gt;cmd-]&lt;/code&gt;. In the terminal, the first of these continues to work, but since the tabs are now vim's own ones, switching needs to be done by the vim shortcuts of &lt;code&gt;gt&lt;/code&gt; and &lt;code&gt;gT&lt;/code&gt;. Not too much to learn - I might try and force myself to use those within MacVim, for the sake of consistency.&lt;/p&gt;
&lt;p&gt;Thirdly, extensions. As I said above, most of these just worked by copying over my &lt;code&gt;.vim&lt;/code&gt; directory. But one of the ones I use most of all - the excellent &lt;a href="https://wincent.com/products/command-t"&gt;Command-T&lt;/a&gt; file navigator - did not. This was because the version of vim installed on Ubuntu by default via &lt;code&gt;apt-get install vim&lt;/code&gt; does not include Ruby support, even though it does include most of the other options. Removing that and installing the &lt;code&gt;vim-nox&lt;/code&gt; package instead rectified that.&lt;/p&gt;
&lt;p&gt;The final issue is cursors. MacVim nicely distinguishes between insert and normal mode by switching between bar and block cursors. In the terminal, this doesn't happen. It appears to be possible to send custom escape sequences when switching modes: the &lt;code&gt;termcap-cursor-shape&lt;/code&gt; help topic explains how. But I couldn't get this to work even for the examples in that topic, which switch colour rather than shape; I don't even know how to begin finding the right escape codes to change the cursor shape. In any case, I suspect something in the interface between Terminal.app and the Ubuntu bash shell is preventing colour codes from working - for example, &lt;code&gt;printf "\e[0 32 m"&lt;/code&gt; works in the OSX shell to change the text colour to green, but the same command fails to work when I'm ssh-ed in to the VM. Any hints would be gratefully received.&lt;/p&gt;</summary><category term="vim"></category><category term="macvim"></category><category term="terminal"></category><category term="ubuntu"></category></entry></feed>